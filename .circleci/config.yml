version: 2.1

orbs:
    aws-s3: circleci/aws-s3@2.0.0
    aws-cli: circleci/aws-cli@2.0.0
    aws_assume_role: lbh-hackit/aws_assume_role@0.1.0

references:
    workspace_root: &workspace_root '~'
    attach_workspace: &attach_workspace
        attach_workspace:
            at: *workspace_root

executors:
    node-executor:
        docker:
            - image: circleci/python:3.9.6

commands:
    assume-role-and-persist-workspace:
        description: "Assume deployment role and persist credentials across jobs"
        parameters:
            aws-account:
                type: string
        steps:
            - checkout
            - aws_assume_role/assume_role:
                  account: <<parameters.aws-account>>
                  profile_name: default
                  role: "LBH_Circle_CI_Deployment_Role"
            - persist_to_workspace:
                  root: *workspace_root
                  paths:
                      - .aws
jobs: 
    build-deploy-development:
        executor: node-executor
        environment:
            aws-region: eu-west-2
        parameters:
            stage:
                type: string
        steps:
            - *attach_workspace
            - checkout            
            - aws-cli/install            
            - run:
                  name: Deploy to S3
                  command: aws s3 sync development s3://configuration-api-configurations-development/
    build-deploy-staging:
        executor: node-executor
        environment:
            aws-region: eu-west-2
        parameters:
            stage:
                type: string
        steps:
            - *attach_workspace
            - checkout
            - aws-cli/install
            - run:
                  name: Deploy to S3
                  command: aws s3 sync staging s3://configuration-api-configurations-staging/
    build-deploy-production:
        executor: node-executor
        environment:
            aws-region: eu-west-2
        parameters:
            stage:
                type: string
        steps:
            - *attach_workspace
            - checkout
            - aws-cli/install
            - run:
                  name: Deploy to S3
                  command: aws s3 sync production s3://configuration-api-configurations-production/

    assume-role-development:
        executor: node-executor
        steps:
            - assume-role-and-persist-workspace:
                  aws-account: $AWS_ACCOUNT_DEVELOPMENT

    assume-role-staging:
        executor: node-executor
        steps:
            - assume-role-and-persist-workspace:
                  aws-account: $AWS_ACCOUNT_STAGING

    assume-role-production:
        executor: node-executor
        steps:
            - assume-role-and-persist-workspace:
                  aws-account: $AWS_ACCOUNT_PRODUCTION
workflows:
    version: 2
    continuous-delivery:
        jobs:                   
            - assume-role-development:
                  context: api-assume-role-housing-development-context
                  filters:
                    branches:
                      only: master
            - build-deploy-development:
                  stage: "development"
                  requires:
                    - assume-role-development
                  filters:
                    branches:
                      only: master                    
            - assume-role-staging:
                  context: api-assume-role-housing-staging-context
                  requires:
                      - build-deploy-development
                  filters:
                    branches:
                      only: master                      
            - build-deploy-staging:
                  stage: "staging"
                  requires:
                    - assume-role-staging
                  filters:
                    branches:
                      only: master                    
            - assume-role-production:
                  context: api-assume-role-housing-production-context
                  requires:
                    - build-deploy-staging
                  filters:
                    branches:
                      only: master                    
            - permit-deploy-production:
                  type: approval
                  requires:
                    - assume-role-production 
                  filters:
                    branches:
                      only: master                    
            - build-deploy-production:
                  stage: "production"
                  requires:
                      - permit-deploy-production
                  filters:
                    branches:
                      only: master                      
